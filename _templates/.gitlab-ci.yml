# Build stages
stages:
  - build
  - image
  - deploy

# Build the application
App:
  stage: build
  tags: [ docker ]
  image: neverbland/neverbuild
  variables:
    APP_PUBLIC_PATH: "/"
  cache:
    paths:
      - node_modules/
  artifacts:
    paths:
      - build/
  script: |
    npm install
    NODE_ENV=production npm run build

# Build the image
Image:
  stage: image
  tags: [ dockerception ]
  image: neverbland/nbcloud
  script: |
    docker build -t ${IMAGE_NAMESPACE}/${IMAGE_NAME:?}:${IMAGE_VERSION:?} .
    docker push ${IMAGE_NAMESPACE}/${IMAGE_NAME:?}:${IMAGE_VERSION:?}

# Deployments
.deploy: &deploy_template
  stage: deploy
  tags: [ dockerception ]
  image: neverbland/nbcloud

Staging:
  <<: *deploy_template
  variables:
    ENV_PREFIX: STAGING_
  environment:
    name: Staging
    on_stop: destroy_staging
  only: [ branches ]
  except: [ master ]
  script: nbcloud deploy "${IMAGE_NAME}-${IMAGE_VERSION}" ci/deploy/docker-cloud.yml app

Production:
  <<: *deploy_template
  variables:
    ENV_PREFIX: STAGING_
  environment:
    name: Production
    on_stop: destroy_production
  only: [ tags ]
  script: nbcloud deploy "${IMAGE_NAME}" ci/deploy/docker-cloud.yml app

# This destroys a stack.
.destroy: &destroy_template
  stage: deploy
  tags: [ dockerception ]
  image: neverbland/nbcloud
  when: manual

destroy_staging:
  <<: *destroy_template
  environment:
    name: Staging
    action: stop
  script: nbcloud destroy "${IMAGE_NAME}-${IMAGE_VERSION}"

destroy_production:
  <<: *destroy_template
  environment:
    name: Production
    action: stop
  script: nbcloud destroy "${IMAGE_NAME}"
